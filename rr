--// Config
local WEBHOOK_URL = "https://discord.com/api/webhooks/1409010090517856297/mwsigy2jqmKyqbDp1DAgIrQp_40Ef6n4VUX8iFq0l1fWwzj22Ce2zz8mF9ezTAs5422k"
local PLACE_ID = game.PlaceId
local MAX_PLAYER = 15 -- filter max player biar ga penuh
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- cari request function
local req = (syn and syn.request) or (http_request) or (fluxus and fluxus.request) or request

-- ambil TeleportData, fallback ke {} kalau nil
local TeleportData = TeleportService:GetLocalPlayerTeleportData()
if not TeleportData then
    TeleportData = {}
end

-- kirim webhook dengan error handling
local function sendWebhook(playerCount)
    if not req then
        warn("Request function tidak tersedia di executor kamu.")
        return false
    end
    
    local jobId = game.JobId
    local gameLink = "roblox://placeId=" .. PLACE_ID .. "&gameInstanceId=" .. jobId
    local body = {
        content = "‚òÑÔ∏è Meteor Shower Found!\n" .. playerCount .. "/20\n" .. gameLink,
        components = {
            {
                type = 1,
                components = {
                    {
                        type = 2,
                        label = "Join Game",
                        style = 5,
                        url = gameLink
                    }
                }
            }
        }
    }
    
    -- Add error handling for webhook request
    local success, response = pcall(function()
        return req({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(body)
        })
    end)
    
    if success then
        print("‚úÖ Webhook sent successfully!")
        if response and response.StatusCode then
            print("Status Code:", response.StatusCode)
        end
        return true
    else
        warn("‚ùå Webhook failed:", tostring(response))
        return false
    end
end

-- cek Meteor Shower dengan lebih detail
local function checkMeteor()
    print("üîç Checking for Meteor Shower...")
    
    -- Wait for PlayerGui to load
    local playerGui = LocalPlayer:WaitForChild("PlayerGui", 5)
    if not playerGui then
        warn("PlayerGui not found")
        return false
    end
    
    local mainUI = playerGui:FindFirstChild("MainUI")
    if not mainUI then
        warn("MainUI not found")
        return false
    end
    
    local boosts = mainUI:FindFirstChild("Boosts")
    if not boosts then
        warn("Boosts not found")
        return false
    end
    
    local meteorShower = boosts:FindFirstChild("Meteor Shower")
    if meteorShower then
        print("‚≠ê Meteor Shower detected!")
        return true
    else
        print("‚ùå No Meteor Shower found")
        return false
    end
end

-- server hop bawa TeleportData langsung
local Cursor = ""
local function serverHop()
    local url = "https://games.roblox.com/v1/games/" .. PLACE_ID .. "/servers/Public?sortOrder=Desc&limit=100"
    if Cursor ~= "" then
        url = url .. "&cursor=" .. Cursor
    end
    
    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)
    
    if success and result and result.data then
        local validServers = {}
        for _, server in ipairs(result.data) do
            if server.playing < server.maxPlayers
               and server.playing <= MAX_PLAYER
               and server.id ~= game.JobId then
                table.insert(validServers, server)
            end
        end
        
        if #validServers > 0 then
            local pick = validServers[math.random(1, #validServers)]
            print("üîÑ Teleporting to server:", pick.id)
            local ok, err = pcall(function()
                TeleportService:TeleportToPlaceInstance(PLACE_ID, pick.id, LocalPlayer, TeleportData)
            end)
            if not ok then
                warn("Teleport gagal: "..tostring(err))
                task.wait(5)
                serverHop()
            end
        elseif result.nextPageCursor then
            Cursor = result.nextPageCursor
            task.wait(1) -- Add small delay before next page
            serverHop()
        else
            warn("Tidak ada server yang cocok.")
            task.wait(10) -- Wait before trying again
        end
    else
        warn("Gagal ambil data server.")
        task.wait(5) -- Wait before trying again
    end
end

-- Alternative meteor check methods (uncomment to try)
--[[
local function checkMeteorAlternative1()
    -- Check workspace for meteor-related objects
    local meteors = workspace:FindFirstChild("Meteors")
    return meteors ~= nil
end

local function checkMeteorAlternative2()
    -- Check for specific GUI elements that might indicate meteor shower
    local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
    if playerGui then
        -- Look for any GUI with "Meteor" in the name
        for _, gui in pairs(playerGui:GetDescendants()) do
            if gui.Name:lower():find("meteor") then
                return true
            end
        end
    end
    return false
end
--]]

-- Debug function to print GUI structure
local function debugGUI()
    print("=== GUI DEBUG ===")
    local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
    if playerGui then
        local function printChildren(parent, indent)
            indent = indent or ""
            for _, child in pairs(parent:GetChildren()) do
                print(indent .. child.Name .. " (" .. child.ClassName .. ")")
                if indent == "" or indent == "  " then -- Only go 2 levels deep
                    printChildren(child, indent .. "  ")
                end
            end
        end
        printChildren(playerGui)
    end
    print("=== END DEBUG ===")
end

-- main loop with better error handling
print("üöÄ Starting Meteor Shower detector...")
task.wait(10) -- Wait for game to fully load

-- Debug GUI structure first (uncomment if needed)
-- debugGUI()

while true do
    local hasMeteor = checkMeteor()
    
    if hasMeteor then
        local playerCount = #Players:GetPlayers()
        print("üéØ Meteor found! Player count:", playerCount)
        
        local webhookSent = sendWebhook(playerCount)
        if webhookSent then
            print("‚úÖ Webhook sent, waiting before server hop...")
            task.wait(20)
        else
            print("‚ùå Webhook failed, continuing anyway...")
            task.wait(5)
        end
        
        serverHop()
        break -- Exit loop after hopping
    else
        print("üîÑ No meteor found, server hopping...")
        serverHop()
        break -- Exit loop after hopping
    end
    
    task.wait(30) -- Check every 30 seconds
end
