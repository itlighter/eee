--// Config
local WEBHOOK_URL = "https://discord.com/api/webhooks/1408441169028972797/_ls8aguNPMDTgrO6yJ6l72p5CXjUD56md_gy6t7xN0Lkf69pqhxaHFTddOtwkX1a3W0Q" -- ganti webhook kamu
local PLACE_ID = game.PlaceId

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- cari request function yang sesuai executor
local req = (syn and syn.request) or (http_request) or (fluxus and fluxus.request) or request

-- kirim webhook
local function sendWebhook(message)
    if not req then
        warn("Request function tidak tersedia di executor kamu.")
        return
    end

    local data = {
        ["content"] = message
    }

    req({
        Url = WEBHOOK_URL,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode(data)
    })
end

-- cek Meteor Shower
local function checkMeteor()
    local boosts = LocalPlayer:WaitForChild("PlayerGui")
        :WaitForChild("MainUI")
        :WaitForChild("Boosts")

    local meteor = boosts:FindFirstChild("Meteor Shower")
    if meteor then
        -- format pesan
        local playerCount = #Players:GetPlayers()
        local jobId = game.JobId
        local link = "https://www.roblox.com/games/"..PLACE_ID.."/-/join?jobId="..jobId

        local msg = "Meteor Shower Found\n"
            ..playerCount.." Players in server\n"
            ..link

        sendWebhook(msg)

        task.wait(20) -- tunggu 20 detik
        return true
    else
        return false
    end
end

-- server hop
local function serverHop()
    local servers = {}
    local cursor = ""

    -- ambil daftar server dari Roblox API
    local success, result = pcall(function()
        return game:HttpGet(
            ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100%s"):format(
                PLACE_ID,
                cursor ~= "" and "&cursor="..cursor or ""
            )
        )
    end)

    if not success then
        warn("Gagal ambil server list")
        return
    end

    local data = HttpService:JSONDecode(result)
    for _, server in ipairs(data.data) do
        if server.playing < server.maxPlayers and server.id ~= game.JobId then
            table.insert(servers, server.id)
        end
    end

    if #servers > 0 then
        local randomServer = servers[math.random(1, #servers)]
        print("Teleporting to server:", randomServer)
        TeleportService:TeleportToPlaceInstance(PLACE_ID, randomServer, LocalPlayer)
    else
        warn("Ga ada server kosong, coba lagi nanti...")
    end
end

-- main loop
task.wait(60) -- delay 1 menit setelah server hop biar aman

while task.wait(30) do -- cek tiap 30 detik
    local found = checkMeteor()
    if found then
        serverHop()
    end
end
