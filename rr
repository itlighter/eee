local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local PlaceId = game.PlaceId
local LocalPlayer = Players.LocalPlayer

local TeleportData = {}
local Cursor = ""
local MAX_PLAYER = 17 -- maksimal jumlah player di server

local function serverHop()
    local url = "https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Desc&limit=100"

    if Cursor ~= "" then
        url = url .. "&cursor=" .. Cursor
    end

    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)

    if success and result and result.data then
        local validServers = {}

        for _, server in ipairs(result.data) do
            -- skip server yg full, terlalu rame (> MAX_PLAYER), atau udah dikunjungi
            if server.playing < server.maxPlayers
               and server.playing <= MAX_PLAYER
               and not TeleportData[server.id]
               and server.id ~= game.JobId then
                table.insert(validServers, server)
            end
        end

        if #validServers > 0 then
            local pick = validServers[math.random(1, #validServers)]
            TeleportData[pick.id] = true
            TeleportService:TeleportToPlaceInstance(PlaceId, pick.id, LocalPlayer)
        else
            if result.nextPageCursor then
                Cursor = result.nextPageCursor
                serverHop()
            else
                warn("Tidak ada server yang cocok.")
            end
        end
    else
        warn("Gagal ambil data server.")
    end
end

serverHop()
