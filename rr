--// Config
local WEBHOOK_URL = "https://discord.com/api/webhooks/1408441169028972797/_ls8aguNPMDTgrO6yJ6l72p5CXjUD56md_gy6t7xN0Lkf69pqhxaHFTddOtwkX1a3W0Q"
local PLACE_ID = game.PlaceId
local MAX_PLAYER = 15 -- filter max player biar ga penuh

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- cari request function
local req = (syn and syn.request) or (http_request) or (fluxus and fluxus.request) or request

-- Data teleport (pakai untuk server visited)
local TeleportData = TeleportService:GetLocalPlayerTeleportData() or {}
TeleportData.VisitedServers = TeleportData.VisitedServers or {}
TeleportData.VisitedServers[game.JobId] = true -- tandai server ini udah dikunjungi

-- kirim webhook
local function sendWebhook(playerCount)
    if not req then
        warn("Request function tidak tersedia di executor kamu.")
        return
    end

    local jobId = game.JobId
    local gameLink = "roblox://placeId=" .. PLACE_ID .. "&gameInstanceId=" .. jobId

    -- Discord JSON payload with a clickable button
    local body = {
        content = "☄️ Meteor Shower Found!\n" .. playerCount .. "/20\n" .. gameLink,
        components = {
            {
                type = 1, -- Action row
                components = {
                    {
                        type = 2,       -- Button
                        label = "Join Game",
                        style = 5,      -- Link button
                        url = gameLink
                    }
                }
            }
        }
    }

    req({
        Url = WEBHOOK_URL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(body)
    })
end

-- cek Meteor Shower
local function checkMeteor()
    local boosts = LocalPlayer.PlayerGui.MainUI.Boosts
    return boosts:FindFirstChild("Meteor Shower") ~= nil
end

-- server hop dengan TeleportData
local Cursor = "" -- cursor global
local function serverHop()
    local url = "https://games.roblox.com/v1/games/" .. PLACE_ID .. "/servers/Public?sortOrder=Desc&limit=100"
    if Cursor ~= "" then
        url = url .. "&cursor=" .. Cursor
    end

    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)

    if success and result and result.data then
        local validServers = {}

        for _, server in ipairs(result.data) do
            if server.playing < server.maxPlayers
               and server.playing <= MAX_PLAYER
               and server.id ~= game.JobId
               and not TeleportData.VisitedServers[server.id] then
                table.insert(validServers, server)
            end
        end

        if #validServers > 0 then
            local pick = validServers[math.random(1, #validServers)]
            TeleportData.VisitedServers[pick.id] = true -- tandai server sebagai visited
            print("Teleporting ke server:", pick.id)
            
            local ok, err = pcall(function()
                TeleportService:TeleportToPlaceInstance(PLACE_ID, pick.id, LocalPlayer, TeleportData)
            end)
            if not ok then
                warn("Teleport gagal: "..tostring(err))
                task.wait(5)
                serverHop()
            end
        elseif result.nextPageCursor then
            Cursor = result.nextPageCursor
            serverHop()
        else
            warn("Tidak ada server yang cocok.")
        end
    else
        warn("Gagal ambil data server.")
    end
end

-- main loop
task.wait(60) -- delay 1 menit setelah join biar aman

while task.wait(30) do
    if checkMeteor() then
        local playerCount = #Players:GetPlayers()
        sendWebhook(playerCount)

        task.wait(20)
        serverHop() -- hop setelah webhook
    else
        print("Meteor tidak ada, hop aja...")
        serverHop() -- hop walau ga nemu Meteor
    end
end
